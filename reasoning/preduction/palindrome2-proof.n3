@prefix skolem: <https://eyereasoner.github.io/.well-known/genid/8b98b360-9a70-4845-b52c-c675af60ad01#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix : <https://eyereasoner.github.io/eye/reasoning#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:gives {
        "ingirumimusnocteetconsumimurigni" a :Palindrome.
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        "ingirumimusnocteetconsumimurigni" a :Palindrome.
    };
    r:evidence (
        [ a r:Fact; r:gives {("atom_codes" "ingirumimusnocteetconsumimurigni" (105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) log:pro true}]
        [ a r:Fact; r:gives {((105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :palindrome true}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma2.

skolem:lemma2 a r:Extraction;
    r:gives {
        @forAll var:x_0. {
            ("atom_codes" "ingirumimusnocteetconsumimurigni" var:x_0) log:pro true.
            (var:x_0) :palindrome true.
        } => {
            "ingirumimusnocteetconsumimurigni" a :Palindrome.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/preduction/palindrome2-query.n3>].

