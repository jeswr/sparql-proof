# -----------------
# Fibonacci numbers
# -----------------
#
# See https://en.wikipedia.org/wiki/Fibonacci_number

@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.
@prefix : <http://example.org/#>.

[ log:and (
    [ log:triple (var:X :fibonacci var:Y)]
)] log:isImpliedBy [ log:and (
    [ log:triple ((var:X 0 1) :fib var:Y)]
)].

[ log:and (
    [ log:triple ((0 var:A var:B) :fib var:A)]
)] log:isImpliedBy true.

[ log:and (
    [ log:triple ((1 var:A var:B) :fib var:B)]
)] log:isImpliedBy true.

[ log:and (
    [ log:triple ((var:X var:A var:B) :fib var:Y)]
)] log:isImpliedBy [ log:and (
    [ log:triple (var:X math:greaterThan 1)]
    [ log:triple ((var:X 1) math:difference var:J)]
    [ log:triple ((var:A var:B) math:sum var:K)]
    [ log:triple ((var:J var:B var:K) :fib var:Y)]
)].

# query
[ log:and (
    [ log:triple (0 :fibonacci var:Y)]
)] log:query [ log:and (
    [ log:triple (0 :fibonacci var:Y)]
)].

[ log:and (
    [ log:triple (1 :fibonacci var:Y)]
)] log:query [ log:and (
    [ log:triple (1 :fibonacci var:Y)]
)].

[ log:and (
    [ log:triple (6 :fibonacci var:Y)]
)] log:query [ log:and (
    [ log:triple (6 :fibonacci var:Y)]
)].

[ log:and (
    [ log:triple (91 :fibonacci var:Y)]
)] log:query [ log:and (
    [ log:triple (91 :fibonacci var:Y)]
)].

[ log:and (
    [ log:triple (283 :fibonacci var:Y)]
)] log:query [ log:and (
    [ log:triple (283 :fibonacci var:Y)]
)].

[ log:and (
    [ log:triple (3674 :fibonacci var:Y)]
)] log:query [ log:and (
    [ log:triple (3674 :fibonacci var:Y)]
)].
