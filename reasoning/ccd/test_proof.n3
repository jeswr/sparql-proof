@prefix skolem: <https://eyereasoner.github.io/.well-known/genid/8b98b360-9a70-4845-b52c-c675af60ad01#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix : <https://eyereasoner.github.io/eye/reasoning#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix ccd: <https://eyereasoner.github.io/eye/reasoning/ccd#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:component skolem:lemma2;
    r:component skolem:lemma3;
    r:component skolem:lemma4;
    r:gives {
        :case1 :answer (:expected 1 :predicted 1 :belief 0.5150284139492985 :evidence ((1.6094379124341005 :input5 "b" 2 0) (0.5108256237659907 :input1 "xyz" 2 1) (0.0 :input4 :v4 1 1) (0.0 :input3 (0 1) 2 2))).
        :case2 :answer (:expected 0 :predicted 0 :belief 0.8658611327876298 :evidence ((0.0 :input5 "a" 1 1) (-0.5877866649021191 :input2 60 2 4) (-0.5108256237659907 :input10 ("abc" 60) 1 2) (-0.5108256237659907 :input4 :v3 1 2) (-0.33647223662121295 :input1 "abc" 2 3))).
        :case3 :answer (:expected 1 :predicted 1 :belief 0.6851785979382504 :evidence ((1.9459101490553135 :input2 40 3 0) (1.0986122886681096 :input10 ("xyz" 40) 1 0) (0.5108256237659907 :input1 "xyz" 2 1) (0.0 :input5 "a" 1 1))).
        :case4 :answer (:expected 0 :predicted 0 :belief 0.7925804425523848 :evidence ((0.0 :input3 (0 1) 2 2) (-0.5108256237659907 :input4 :v3 1 2))).
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        :case1 :answer (:expected 1 :predicted 1 :belief 0.5150284139492985 :evidence ((1.6094379124341005 :input5 "b" 2 0) (0.5108256237659907 :input1 "xyz" 2 1) (0.0 :input4 :v4 1 1) (0.0 :input3 (0 1) 2 2))).
    };
    r:evidence (
        skolem:lemma5
        [ a r:Fact; r:gives {((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1) e:findall ((_:sk_0 _:sk_1 _:sk_2 _:sk_3) {
            (:input1 :input2 :input3 :input4 :input5 :input10) list:member _:sk_0.
            :case1 _:sk_0 _:sk_1.
            (_:sk_0 _:sk_1) ccd:model (:output1 _:sk_2 _:sk_3).
        } ((:input1 "xyz" 2 1) (:input3 (0 1) 2 2) (:input4 :v4 1 1) (:input5 "b" 2 0)))}]
        [ a r:Fact; r:gives {(((:input1 "xyz" 2 1) (:input3 (0 1) 2 2) (:input4 :v4 1 1) (:input5 "b" 2 0)) 4.0 1.0) ccd:transformer (((1.6094379124341005 :input5 "b" 2 0) (0.5108256237659907 :input1 "xyz" 2 1) (0.0 :input4 :v4 1 1) (0.0 :input3 (0 1) 2 2)) 0.5150284139492985)}]
        [ a r:Fact; r:gives {((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1) e:optional {
            0.5150284139492985 math:greaterThan 0.5 .
            ("1") e:calculate 1 .
            ("_Q" 0.5150284139492985) e:calculate 0.5150284139492985.
        }}]
        [ a r:Fact; r:gives {((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1) e:optional {
            0.5150284139492985 math:notGreaterThan 0.5 .
            ("0") e:calculate 1 .
            ("1-_Q" 0.5150284139492985) e:calculate 0.5150284139492985.
        }}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "https://eyereasoner.github.io/eye/reasoning#case1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_0"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo ((:input1 "xyz" 2 1) (:input3 (0 1) 2 2) (:input4 :v4 1 1) (:input5 "b" 2 0))];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo ((1.6094379124341005 :input5 "b" 2 0) (0.5108256237659907 :input1 "xyz" 2 1) (0.0 :input4 :v4 1 1) (0.0 :input3 (0 1) 2 2))];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 0.5150284139492985];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_11"]; r:boundTo 0.5150284139492985];
    r:rule skolem:lemma6.

skolem:lemma2 a r:Inference;
    r:gives {
        :case2 :answer (:expected 0 :predicted 0 :belief 0.8658611327876298 :evidence ((0.0 :input5 "a" 1 1) (-0.5877866649021191 :input2 60 2 4) (-0.5108256237659907 :input10 ("abc" 60) 1 2) (-0.5108256237659907 :input4 :v3 1 2) (-0.33647223662121295 :input1 "abc" 2 3))).
    };
    r:evidence (
        skolem:lemma7
        [ a r:Fact; r:gives {((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1) e:findall ((_:sk_4 _:sk_5 _:sk_6 _:sk_7) {
            (:input1 :input2 :input3 :input4 :input5 :input10) list:member _:sk_4.
            :case2 _:sk_4 _:sk_5.
            (_:sk_4 _:sk_5) ccd:model (:output1 _:sk_6 _:sk_7).
        } ((:input1 "abc" 2 3) (:input2 60 2 4) (:input4 :v3 1 2) (:input5 "a" 1 1) (:input10 ("abc" 60) 1 2)))}]
        [ a r:Fact; r:gives {(((:input1 "abc" 2 3) (:input2 60 2 4) (:input4 :v3 1 2) (:input5 "a" 1 1) (:input10 ("abc" 60) 1 2)) 4.0 1.0) ccd:transformer (((0.0 :input5 "a" 1 1) (-0.5877866649021191 :input2 60 2 4) (-0.5108256237659907 :input10 ("abc" 60) 1 2) (-0.5108256237659907 :input4 :v3 1 2) (-0.33647223662121295 :input1 "abc" 2 3)) 0.13413886721237023)}]
        [ a r:Fact; r:gives {((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1) e:optional {
            0.13413886721237023 math:greaterThan 0.5 .
            ("1") e:calculate 0 .
            ("_Q" 0.13413886721237023) e:calculate 0.8658611327876298.
        }}]
        [ a r:Fact; r:gives {((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1) e:optional {
            0.13413886721237023 math:notGreaterThan 0.5 .
            ("0") e:calculate 0 .
            ("1-_Q" 0.13413886721237023) e:calculate 0.8658611327876298.
        }}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "https://eyereasoner.github.io/eye/reasoning#case2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_4"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_5"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_6"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_7"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo ((:input1 "abc" 2 3) (:input2 60 2 4) (:input4 :v3 1 2) (:input5 "a" 1 1) (:input10 ("abc" 60) 1 2))];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo ((0.0 :input5 "a" 1 1) (-0.5877866649021191 :input2 60 2 4) (-0.5108256237659907 :input10 ("abc" 60) 1 2) (-0.5108256237659907 :input4 :v3 1 2) (-0.33647223662121295 :input1 "abc" 2 3))];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 0.13413886721237023];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_11"]; r:boundTo 0.8658611327876298];
    r:rule skolem:lemma6.

skolem:lemma3 a r:Inference;
    r:gives {
        :case3 :answer (:expected 1 :predicted 1 :belief 0.6851785979382504 :evidence ((1.9459101490553135 :input2 40 3 0) (1.0986122886681096 :input10 ("xyz" 40) 1 0) (0.5108256237659907 :input1 "xyz" 2 1) (0.0 :input5 "a" 1 1))).
    };
    r:evidence (
        skolem:lemma8
        [ a r:Fact; r:gives {((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1) e:findall ((_:sk_8 _:sk_9 _:sk_10 _:sk_11) {
            (:input1 :input2 :input3 :input4 :input5 :input10) list:member _:sk_8.
            :case3 _:sk_8 _:sk_9.
            (_:sk_8 _:sk_9) ccd:model (:output1 _:sk_10 _:sk_11).
        } ((:input1 "xyz" 2 1) (:input2 40 3 0) (:input5 "a" 1 1) (:input10 ("xyz" 40) 1 0)))}]
        [ a r:Fact; r:gives {(((:input1 "xyz" 2 1) (:input2 40 3 0) (:input5 "a" 1 1) (:input10 ("xyz" 40) 1 0)) 4.0 1.0) ccd:transformer (((1.9459101490553135 :input2 40 3 0) (1.0986122886681096 :input10 ("xyz" 40) 1 0) (0.5108256237659907 :input1 "xyz" 2 1) (0.0 :input5 "a" 1 1)) 0.6851785979382504)}]
        [ a r:Fact; r:gives {((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1) e:optional {
            0.6851785979382504 math:greaterThan 0.5 .
            ("1") e:calculate 1 .
            ("_Q" 0.6851785979382504) e:calculate 0.6851785979382504.
        }}]
        [ a r:Fact; r:gives {((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1) e:optional {
            0.6851785979382504 math:notGreaterThan 0.5 .
            ("0") e:calculate 1 .
            ("1-_Q" 0.6851785979382504) e:calculate 0.6851785979382504.
        }}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "https://eyereasoner.github.io/eye/reasoning#case3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_8"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_9"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_10"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_11"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo ((:input1 "xyz" 2 1) (:input2 40 3 0) (:input5 "a" 1 1) (:input10 ("xyz" 40) 1 0))];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo ((1.9459101490553135 :input2 40 3 0) (1.0986122886681096 :input10 ("xyz" 40) 1 0) (0.5108256237659907 :input1 "xyz" 2 1) (0.0 :input5 "a" 1 1))];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 0.6851785979382504];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_11"]; r:boundTo 0.6851785979382504];
    r:rule skolem:lemma6.

skolem:lemma4 a r:Inference;
    r:gives {
        :case4 :answer (:expected 0 :predicted 0 :belief 0.7925804425523848 :evidence ((0.0 :input3 (0 1) 2 2) (-0.5108256237659907 :input4 :v3 1 2))).
    };
    r:evidence (
        skolem:lemma9
        [ a r:Fact; r:gives {((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1) e:findall ((_:sk_12 _:sk_13 _:sk_14 _:sk_15) {
            (:input1 :input2 :input3 :input4 :input5 :input10) list:member _:sk_12.
            :case4 _:sk_12 _:sk_13.
            (_:sk_12 _:sk_13) ccd:model (:output1 _:sk_14 _:sk_15).
        } ((:input3 (0 1) 2 2) (:input4 :v3 1 2)))}]
        [ a r:Fact; r:gives {(((:input3 (0 1) 2 2) (:input4 :v3 1 2)) 4.0 1.0) ccd:transformer (((0.0 :input3 (0 1) 2 2) (-0.5108256237659907 :input4 :v3 1 2)) 0.20741955744761525)}]
        [ a r:Fact; r:gives {((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1) e:optional {
            0.20741955744761525 math:greaterThan 0.5 .
            ("1") e:calculate 0 .
            ("_Q" 0.20741955744761525) e:calculate 0.7925804425523848.
        }}]
        [ a r:Fact; r:gives {((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1) e:optional {
            0.20741955744761525 math:notGreaterThan 0.5 .
            ("0") e:calculate 0 .
            ("1-_Q" 0.20741955744761525) e:calculate 0.7925804425523848.
        }}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "https://eyereasoner.github.io/eye/reasoning#case4"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/train_model.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/background_rules.n3> <https://eyereasoner.github.io/eye/reasoning/ccd/ccd_rules.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_12"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_13"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_14"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_15"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo ((:input3 (0 1) 2 2) (:input4 :v3 1 2))];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo ((0.0 :input3 (0 1) 2 2) (-0.5108256237659907 :input4 :v3 1 2))];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 0.20741955744761525];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_11"]; r:boundTo 0.7925804425523848];
    r:rule skolem:lemma6.

skolem:lemma5 a r:Extraction;
    r:gives {
        :case1 :output1 1 .
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3>].

skolem:lemma6 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4, var:x_5, var:x_6, var:x_7, var:x_8, var:x_9, var:x_10, var:x_11. {
            var:x_0 :output1 var:x_1.
            var:x_2 e:findall ((var:x_3 var:x_4 var:x_5 var:x_6) {
                (:input1 :input2 :input3 :input4 :input5 :input10) list:member var:x_3.
                var:x_0 var:x_3 var:x_4.
                (var:x_3 var:x_4) ccd:model (:output1 var:x_5 var:x_6).
            } var:x_7).
            (var:x_7 4.0 1.0) ccd:transformer (var:x_8 var:x_9).
            var:x_2 e:optional {
                var:x_9 math:greaterThan 0.5 .
                ("1") e:calculate var:x_10.
                ("_Q" var:x_9) e:calculate var:x_11.
            }.
            var:x_2 e:optional {
                var:x_9 math:notGreaterThan 0.5 .
                ("0") e:calculate var:x_10.
                ("1-_Q" var:x_9) e:calculate var:x_11.
            }.
        } => {
            var:x_0 :answer (:expected var:x_1 :predicted var:x_10 :belief var:x_11 :evidence var:x_8).
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/ccd/test_query.n3>].

skolem:lemma7 a r:Extraction;
    r:gives {
        :case2 :output1 0 .
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3>].

skolem:lemma8 a r:Extraction;
    r:gives {
        :case3 :output1 1 .
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3>].

skolem:lemma9 a r:Extraction;
    r:gives {
        :case4 :output1 0 .
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/ccd/test_data.n3>].

