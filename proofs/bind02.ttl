@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix sp: <http://www.w3.org/2005/sparql-results#> .
@prefix : <#> .

# The proof
:proof a :Proof ;
    :hasQuery :query ;
    :hasResultSet :result_set ;
    :hasStep :step1, :step2 .

# The query
:query a :Query ;
    :hasQueryString """
PREFIX : <http://example.org/> 

SELECT ?o ?z ?z2
{
  ?s ?p ?o .
  BIND(?o+10 AS ?z)
  BIND(?o+100 AS ?z2)
}
""" .

# The result set
:result_set a :ResultSet ;
    :hasResult :result1, :result2, :result3, :result4 .

# Individual results
:result1 a :Result ;
    :hasBinding :binding1_o, :binding1_z, :binding1_z2 .

:result2 a :Result ;
    :hasBinding :binding2_o, :binding2_z, :binding2_z2 .

:result3 a :Result ;
    :hasBinding :binding3_o, :binding3_z, :binding3_z2 .

:result4 a :Result ;
    :hasBinding :binding4_o, :binding4_z, :binding4_z2 .

# Bindings for result1
:binding1_o a :Binding ;
    :hasVariable "o" ;
    :hasValue "4" ;
    :hasDatatype <http://www.w3.org/2001/XMLSchema#integer> .

:binding1_z a :Binding ;
    :hasVariable "z" ;
    :hasValue "14" ;
    :hasDatatype <http://www.w3.org/2001/XMLSchema#integer> .

:binding1_z2 a :Binding ;
    :hasVariable "z2" ;
    :hasValue "104" ;
    :hasDatatype <http://www.w3.org/2001/XMLSchema#integer> .

# Bindings for result2
:binding2_o a :Binding ;
    :hasVariable "o" ;
    :hasValue "3" ;
    :hasDatatype <http://www.w3.org/2001/XMLSchema#integer> .

:binding2_z a :Binding ;
    :hasVariable "z" ;
    :hasValue "13" ;
    :hasDatatype <http://www.w3.org/2001/XMLSchema#integer> .

:binding2_z2 a :Binding ;
    :hasVariable "z2" ;
    :hasValue "103" ;
    :hasDatatype <http://www.w3.org/2001/XMLSchema#integer> .

# Bindings for result3
:binding3_o a :Binding ;
    :hasVariable "o" ;
    :hasValue "2" ;
    :hasDatatype <http://www.w3.org/2001/XMLSchema#integer> .

:binding3_z a :Binding ;
    :hasVariable "z" ;
    :hasValue "12" ;
    :hasDatatype <http://www.w3.org/2001/XMLSchema#integer> .

:binding3_z2 a :Binding ;
    :hasVariable "z2" ;
    :hasValue "102" ;
    :hasDatatype <http://www.w3.org/2001/XMLSchema#integer> .

# Bindings for result4
:binding4_o a :Binding ;
    :hasVariable "o" ;
    :hasValue "1" ;
    :hasDatatype <http://www.w3.org/2001/XMLSchema#integer> .

:binding4_z a :Binding ;
    :hasVariable "z" ;
    :hasValue "11" ;
    :hasDatatype <http://www.w3.org/2001/XMLSchema#integer> .

:binding4_z2 a :Binding ;
    :hasVariable "z2" ;
    :hasValue "101" ;
    :hasDatatype <http://www.w3.org/2001/XMLSchema#integer> .

# The proof steps
:step1 a :ProofStep ;
    :hasStepType "bind" ;
    :hasStepDescription "BIND(?o+10 AS ?z)" ;
    :hasStepResult :intermediate_result_set1 ;
    :hasNextStep :step2 .

:step2 a :ProofStep ;
    :hasStepType "bind" ;
    :hasStepDescription "BIND(?o+100 AS ?z2)" ;
    :hasStepResult :result_set .

# Intermediate result set
:intermediate_result_set1 a :ResultSet ;
    :hasResult :intermediate_result1, :intermediate_result2, :intermediate_result3, :intermediate_result4 .

# Intermediate results
:intermediate_result1 a :Result ;
    :hasBinding :binding1_o, :binding1_z .

:intermediate_result2 a :Result ;
    :hasBinding :binding2_o, :binding2_z .

:intermediate_result3 a :Result ;
    :hasBinding :binding3_o, :binding3_z .

:intermediate_result4 a :Result ;
    :hasBinding :binding4_o, :binding4_z . 